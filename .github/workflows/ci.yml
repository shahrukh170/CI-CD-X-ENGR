name: CI
on:
  pull_request:
    branches: [ main, develop ]
    paths: ['apps/*','.github/*']
  push:
    branches: [ main, 'release/*']
permissions:
  id-token: write # for OIDC
  contents: read
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - run: pip-audit -r app/service_a/requirements.txt || true
      - run: pytest -q --maxfail=1 --disable-warnings --cov=app --cov-report=xml || true
      - name: Unit tests
        run: |
            pytest -q --maxfail=1 --disable-warnings --cov=app --cov-report=xml || true
      - name: Dependency audit
        run: pip-audit -r app/service_a/requirements.txt || true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: reponame
          IMAGE_TAG: ${{ github.sha }}
          run: |
             docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}



